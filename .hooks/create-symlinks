#!/usr/bin/env python3
from pathlib import Path
from os import uname


HOME = Path.home()
CWD = Path.cwd()


CONFIG_DIRS = [
    CWD,
    CWD / 'config',
]


OS_SUFFIX = '.' + uname().sysname.lower()


def excluded(path):
    return path.name.startswith('.') \
        or (path.suffix and path.suffix != OS_SUFFIX)


def configs():
    for dir in CONFIG_DIRS:
        yield from (
            sub.relative_to(CWD)
            for sub in dir.iterdir()
            if sub not in CONFIG_DIRS and not excluded(sub)
        )


def update_symlink(path):
    first_part, *rest_parts = path.with_suffix('').parts
    link = Path(HOME, '.' + first_part, *rest_parts)
    config = path.absolute()
    if link.is_symlink():
        if link.readlink() == config:
            return
        link.unlink()
    elif link.is_file() or link.is_dir():
        link.rename(link.with_suffix('.old'))
    elif link.exists():
        print(f'error: {link} already exists')
        return
    link.symlink_to(config)
    print(f'symlink ~/{link.relative_to(HOME)}',
          f'to ~/{config.relative_to(HOME)} created')


if __name__ == '__main__':
    for path in configs():
        update_symlink(path)

#!/usr/bin/env python3
from pathlib import Path

HOME = Path.home()


def excluded(path):
    return path.name.startswith('.') or path.suffix == '.md'


def configs():
    cwd = Path.cwd()
    config = cwd / 'config'
    yield from (
        sub.relative_to(cwd)
        for sub in cwd.iterdir()
        if sub != config and not excluded(sub)
    )
    yield from (
        sub.relative_to(cwd)
        for sub in config.iterdir()
        if not excluded(sub)
    )


def update_symlink(path):
    link = Path(HOME, '.' + path.parts[0], *path.parts[1:])
    config = path.absolute()
    if link.is_symlink():
        if link.readlink() == config:
            return
        link.unlink()
    elif link.is_file() or link.is_dir():
        link.rename(link.with_suffix('.old'))
    elif link.exists():
        print(f'error: {link} already exists')
        return
    link.symlink_to(config)
    print(f'symlink ~/{link.relative_to(HOME)}',
          f'to ~/{config.relative_to(HOME)} created')


if __name__ == '__main__':
    for path in configs():
        update_symlink(path)
